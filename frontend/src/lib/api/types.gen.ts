// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * AuthorizedUser
 */
export type AuthorizedUser = {
    /**
     * Sub
     */
    sub: string;
    /**
     * Exp
     */
    exp: string;
};

/**
 * CloneRunnerInstanceIn
 */
export type CloneRunnerInstanceIn = {
    /**
     * Token
     */
    token?: string | null;
    /**
     * Count
     */
    count?: number;
};

/**
 * CreateRunnerInstanceIn
 */
export type CreateRunnerInstanceIn = {
    /**
     * Runner Name
     */
    runner_name?: string | null;
    /**
     * Github Url
     */
    github_url: string;
    /**
     * Token
     */
    token: string;
    /**
     * Labels
     */
    labels?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * PrerequisiteCheck
 */
export type PrerequisiteCheck = {
    /**
     * Key
     */
    key: string;
    /**
     * Status
     */
    status: boolean;
    /**
     * Message
     */
    message: string;
    /**
     * Mandatory
     */
    mandatory: boolean;
};

/**
 * PrerequisitesResponse
 */
export type PrerequisitesResponse = {
    /**
     * Checks
     */
    checks: Array<PrerequisiteCheck>;
    /**
     * Status
     */
    status: boolean;
};

/**
 * RunnerInstanceOut
 */
export type RunnerInstanceOut = {
    /**
     * Id
     */
    id: number;
    /**
     * Runner Name
     */
    runner_name: string;
    /**
     * Github Url
     */
    github_url: string;
    /**
     * Token
     */
    token: string;
    /**
     * Labels
     */
    labels: string | null;
    /**
     * Hostname
     */
    hostname: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Status
     */
    status: string;
};

/**
 * TokenResponse
 */
export type TokenResponse = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type?: string;
};

/**
 * UpdateRunnerInstanceIn
 */
export type UpdateRunnerInstanceIn = {
    /**
     * Token
     */
    token: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type LoginAuthLoginPostData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginAuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginAuthLoginPostError = LoginAuthLoginPostErrors[keyof LoginAuthLoginPostErrors];

export type LoginAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenResponse;
};

export type LoginAuthLoginPostResponse = LoginAuthLoginPostResponses[keyof LoginAuthLoginPostResponses];

export type MeCommonMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/common/me';
};

export type MeCommonMeGetResponses = {
    /**
     * Successful Response
     */
    200: AuthorizedUser;
};

export type MeCommonMeGetResponse = MeCommonMeGetResponses[keyof MeCommonMeGetResponses];

export type GetPrerequisitesSystemPrerequisitesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/system/prerequisites';
};

export type GetPrerequisitesSystemPrerequisitesGetResponses = {
    /**
     * Successful Response
     */
    200: PrerequisitesResponse;
};

export type GetPrerequisitesSystemPrerequisitesGetResponse = GetPrerequisitesSystemPrerequisitesGetResponses[keyof GetPrerequisitesSystemPrerequisitesGetResponses];

export type SetupSystemSystemSetupPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/system/setup';
};

export type SetupSystemSystemSetupPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListInstancesRunnerGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/runner';
};

export type ListInstancesRunnerGetResponses = {
    /**
     * Response List Instances Runner Get
     *
     * Successful Response
     */
    200: Array<RunnerInstanceOut>;
};

export type ListInstancesRunnerGetResponse = ListInstancesRunnerGetResponses[keyof ListInstancesRunnerGetResponses];

export type CreateInstanceRunnerPostData = {
    body: CreateRunnerInstanceIn;
    path?: never;
    query?: never;
    url: '/runner';
};

export type CreateInstanceRunnerPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateInstanceRunnerPostError = CreateInstanceRunnerPostErrors[keyof CreateInstanceRunnerPostErrors];

export type CreateInstanceRunnerPostResponses = {
    /**
     * Successful Response
     */
    200: RunnerInstanceOut;
};

export type CreateInstanceRunnerPostResponse = CreateInstanceRunnerPostResponses[keyof CreateInstanceRunnerPostResponses];

export type DeleteInstanceRunnerInstanceIdDeleteData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}';
};

export type DeleteInstanceRunnerInstanceIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteInstanceRunnerInstanceIdDeleteError = DeleteInstanceRunnerInstanceIdDeleteErrors[keyof DeleteInstanceRunnerInstanceIdDeleteErrors];

export type DeleteInstanceRunnerInstanceIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateInstanceRunnerInstanceIdPutData = {
    body: UpdateRunnerInstanceIn;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}';
};

export type UpdateInstanceRunnerInstanceIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateInstanceRunnerInstanceIdPutError = UpdateInstanceRunnerInstanceIdPutErrors[keyof UpdateInstanceRunnerInstanceIdPutErrors];

export type UpdateInstanceRunnerInstanceIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CloneInstanceRunnerInstanceIdClonePostData = {
    body: CloneRunnerInstanceIn;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}/clone';
};

export type CloneInstanceRunnerInstanceIdClonePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CloneInstanceRunnerInstanceIdClonePostError = CloneInstanceRunnerInstanceIdClonePostErrors[keyof CloneInstanceRunnerInstanceIdClonePostErrors];

export type CloneInstanceRunnerInstanceIdClonePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetInstanceLogsRunnerInstanceIdLogsGetData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}/logs';
};

export type GetInstanceLogsRunnerInstanceIdLogsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetInstanceLogsRunnerInstanceIdLogsGetError = GetInstanceLogsRunnerInstanceIdLogsGetErrors[keyof GetInstanceLogsRunnerInstanceIdLogsGetErrors];

export type GetInstanceLogsRunnerInstanceIdLogsGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type StartInstanceRunnerInstanceIdStartPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}/start';
};

export type StartInstanceRunnerInstanceIdStartPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StartInstanceRunnerInstanceIdStartPostError = StartInstanceRunnerInstanceIdStartPostErrors[keyof StartInstanceRunnerInstanceIdStartPostErrors];

export type StartInstanceRunnerInstanceIdStartPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type StopInstanceRunnerInstanceIdStopPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}/stop';
};

export type StopInstanceRunnerInstanceIdStopPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StopInstanceRunnerInstanceIdStopPostError = StopInstanceRunnerInstanceIdStopPostErrors[keyof StopInstanceRunnerInstanceIdStopPostErrors];

export type StopInstanceRunnerInstanceIdStopPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RestartInstanceRunnerInstanceIdRestartPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}/restart';
};

export type RestartInstanceRunnerInstanceIdRestartPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RestartInstanceRunnerInstanceIdRestartPostError = RestartInstanceRunnerInstanceIdRestartPostErrors[keyof RestartInstanceRunnerInstanceIdRestartPostErrors];

export type RestartInstanceRunnerInstanceIdRestartPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClearInstanceLogsRunnerInstanceIdLogsClearPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runner/{instance_id}/logs/clear';
};

export type ClearInstanceLogsRunnerInstanceIdLogsClearPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ClearInstanceLogsRunnerInstanceIdLogsClearPostError = ClearInstanceLogsRunnerInstanceIdLogsClearPostErrors[keyof ClearInstanceLogsRunnerInstanceIdLogsClearPostErrors];

export type ClearInstanceLogsRunnerInstanceIdLogsClearPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
