// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * AuthorizedUser
 */
export type AuthorizedUser = {
    /**
     * Sub
     */
    sub: string;
    /**
     * Exp
     */
    exp: string;
};

/**
 * CreateRunnerInstanceIn
 */
export type CreateRunnerInstanceIn = {
    /**
     * Github Url
     */
    github_url: string;
    /**
     * Token
     */
    token: string;
    /**
     * Command
     */
    command?: string | null;
};

/**
 * ExecuteCommandIn
 */
export type ExecuteCommandIn = {
    /**
     * Command
     */
    command: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * MetaIn
 */
export type MetaIn = {
    /**
     * Meta Key
     */
    meta_key: string;
    /**
     * Meta Value
     */
    meta_value: unknown;
    /**
     * Meta Type
     */
    meta_type: 'string' | 'int' | 'bool' | 'list' | 'json';
};

/**
 * MetaOut
 */
export type MetaOut = {
    /**
     * Meta Key
     */
    meta_key: string;
    /**
     * Meta Value
     */
    meta_value: unknown;
    /**
     * Meta Type
     */
    meta_type: 'string' | 'int' | 'bool' | 'list' | 'json';
};

/**
 * PullRunnerIn
 */
export type PullRunnerIn = {
    /**
     * Version
     */
    version: string;
};

/**
 * ReleaseOut
 */
export type ReleaseOut = {
    /**
     * Published At
     */
    published_at: string | null;
    /**
     * Name
     */
    name: string | null;
    /**
     * Size
     */
    size: number | null;
    /**
     * Download Url
     */
    download_url: string | null;
    /**
     * Html Url
     */
    html_url: string | null;
    /**
     * Is Pulled
     */
    is_pulled: boolean;
    /**
     * Is Linux Available
     */
    is_linux_available: boolean;
};

/**
 * RunnerInstanceOut
 */
export type RunnerInstanceOut = {
    /**
     * Id
     */
    id: number;
    /**
     * Github Url
     */
    github_url: string;
    /**
     * Token
     */
    token: string;
    /**
     * Hostname
     */
    hostname: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Status
     */
    status: string;
};

/**
 * TokenResponse
 */
export type TokenResponse = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type?: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type LoginAuthLoginPostData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginAuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginAuthLoginPostError = LoginAuthLoginPostErrors[keyof LoginAuthLoginPostErrors];

export type LoginAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenResponse;
};

export type LoginAuthLoginPostResponse = LoginAuthLoginPostResponses[keyof LoginAuthLoginPostResponses];

export type MeCommonMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/common/me';
};

export type MeCommonMeGetResponses = {
    /**
     * Successful Response
     */
    200: AuthorizedUser;
};

export type MeCommonMeGetResponse = MeCommonMeGetResponses[keyof MeCommonMeGetResponses];

export type ListMetaMetaGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/meta/';
};

export type ListMetaMetaGetResponses = {
    /**
     * Response List Meta Meta  Get
     *
     * Successful Response
     */
    200: Array<MetaOut>;
};

export type ListMetaMetaGetResponse = ListMetaMetaGetResponses[keyof ListMetaMetaGetResponses];

export type CreateMetaMetaPostData = {
    body: MetaIn;
    path?: never;
    query?: never;
    url: '/meta/';
};

export type CreateMetaMetaPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMetaMetaPostError = CreateMetaMetaPostErrors[keyof CreateMetaMetaPostErrors];

export type CreateMetaMetaPostResponses = {
    /**
     * Successful Response
     */
    200: MetaOut;
};

export type CreateMetaMetaPostResponse = CreateMetaMetaPostResponses[keyof CreateMetaMetaPostResponses];

export type GetMetaMetaKeyGetData = {
    body?: never;
    path: {
        /**
         * Key
         */
        key: string;
    };
    query?: never;
    url: '/meta/{key}';
};

export type GetMetaMetaKeyGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMetaMetaKeyGetError = GetMetaMetaKeyGetErrors[keyof GetMetaMetaKeyGetErrors];

export type GetMetaMetaKeyGetResponses = {
    /**
     * Successful Response
     */
    200: MetaOut;
};

export type GetMetaMetaKeyGetResponse = GetMetaMetaKeyGetResponses[keyof GetMetaMetaKeyGetResponses];

export type GetReleasesRunnersReleaseGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/runners/release';
};

export type GetReleasesRunnersReleaseGetResponses = {
    /**
     * Response Get Releases Runners Release Get
     *
     * Successful Response
     */
    200: Array<ReleaseOut>;
};

export type GetReleasesRunnersReleaseGetResponse = GetReleasesRunnersReleaseGetResponses[keyof GetReleasesRunnersReleaseGetResponses];

export type PullRunnerRunnersReleasePostData = {
    body: PullRunnerIn;
    path?: never;
    query?: never;
    url: '/runners/release';
};

export type PullRunnerRunnersReleasePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PullRunnerRunnersReleasePostError = PullRunnerRunnersReleasePostErrors[keyof PullRunnerRunnersReleasePostErrors];

export type PullRunnerRunnersReleasePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteCachedReleaseRunnersReleaseVersionDeleteData = {
    body?: never;
    path: {
        /**
         * Version
         */
        version: string;
    };
    query?: never;
    url: '/runners/release/{version}';
};

export type DeleteCachedReleaseRunnersReleaseVersionDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCachedReleaseRunnersReleaseVersionDeleteError = DeleteCachedReleaseRunnersReleaseVersionDeleteErrors[keyof DeleteCachedReleaseRunnersReleaseVersionDeleteErrors];

export type DeleteCachedReleaseRunnersReleaseVersionDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListInstancesRunnersInstanceGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/runners/instance';
};

export type ListInstancesRunnersInstanceGetResponses = {
    /**
     * Response List Instances Runners Instance Get
     *
     * Successful Response
     */
    200: Array<RunnerInstanceOut>;
};

export type ListInstancesRunnersInstanceGetResponse = ListInstancesRunnersInstanceGetResponses[keyof ListInstancesRunnersInstanceGetResponses];

export type CreateInstanceRunnersInstancePostData = {
    body: CreateRunnerInstanceIn;
    path?: never;
    query?: never;
    url: '/runners/instance';
};

export type CreateInstanceRunnersInstancePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateInstanceRunnersInstancePostError = CreateInstanceRunnersInstancePostErrors[keyof CreateInstanceRunnersInstancePostErrors];

export type CreateInstanceRunnersInstancePostResponses = {
    /**
     * Successful Response
     */
    200: RunnerInstanceOut;
};

export type CreateInstanceRunnersInstancePostResponse = CreateInstanceRunnersInstancePostResponses[keyof CreateInstanceRunnersInstancePostResponses];

export type DeleteInstanceRunnersInstanceInstanceIdDeleteData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}';
};

export type DeleteInstanceRunnersInstanceInstanceIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteInstanceRunnersInstanceInstanceIdDeleteError = DeleteInstanceRunnersInstanceInstanceIdDeleteErrors[keyof DeleteInstanceRunnersInstanceInstanceIdDeleteErrors];

export type DeleteInstanceRunnersInstanceInstanceIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CloneInstanceRunnersInstanceInstanceIdClonePostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}/clone';
};

export type CloneInstanceRunnersInstanceInstanceIdClonePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CloneInstanceRunnersInstanceInstanceIdClonePostError = CloneInstanceRunnersInstanceInstanceIdClonePostErrors[keyof CloneInstanceRunnersInstanceInstanceIdClonePostErrors];

export type CloneInstanceRunnersInstanceInstanceIdClonePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetInstanceLogsRunnersInstanceInstanceIdLogsGetData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}/logs';
};

export type GetInstanceLogsRunnersInstanceInstanceIdLogsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetInstanceLogsRunnersInstanceInstanceIdLogsGetError = GetInstanceLogsRunnersInstanceInstanceIdLogsGetErrors[keyof GetInstanceLogsRunnersInstanceInstanceIdLogsGetErrors];

export type GetInstanceLogsRunnersInstanceInstanceIdLogsGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RebuildInstanceRunnersInstanceInstanceIdRebuildPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}/rebuild';
};

export type RebuildInstanceRunnersInstanceInstanceIdRebuildPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RebuildInstanceRunnersInstanceInstanceIdRebuildPostError = RebuildInstanceRunnersInstanceInstanceIdRebuildPostErrors[keyof RebuildInstanceRunnersInstanceInstanceIdRebuildPostErrors];

export type RebuildInstanceRunnersInstanceInstanceIdRebuildPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type StartInstanceRunnersInstanceInstanceIdStartPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}/start';
};

export type StartInstanceRunnersInstanceInstanceIdStartPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StartInstanceRunnersInstanceInstanceIdStartPostError = StartInstanceRunnersInstanceInstanceIdStartPostErrors[keyof StartInstanceRunnersInstanceInstanceIdStartPostErrors];

export type StartInstanceRunnersInstanceInstanceIdStartPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type StopInstanceRunnersInstanceInstanceIdStopPostData = {
    body?: never;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}/stop';
};

export type StopInstanceRunnersInstanceInstanceIdStopPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StopInstanceRunnersInstanceInstanceIdStopPostError = StopInstanceRunnersInstanceInstanceIdStopPostErrors[keyof StopInstanceRunnersInstanceInstanceIdStopPostErrors];

export type StopInstanceRunnersInstanceInstanceIdStopPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ExecuteCommandRunnersInstanceInstanceIdCommandPostData = {
    body: ExecuteCommandIn;
    path: {
        /**
         * Instance Id
         */
        instance_id: number;
    };
    query?: never;
    url: '/runners/instance/{instance_id}/command';
};

export type ExecuteCommandRunnersInstanceInstanceIdCommandPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ExecuteCommandRunnersInstanceInstanceIdCommandPostError = ExecuteCommandRunnersInstanceInstanceIdCommandPostErrors[keyof ExecuteCommandRunnersInstanceInstanceIdCommandPostErrors];

export type ExecuteCommandRunnersInstanceInstanceIdCommandPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
